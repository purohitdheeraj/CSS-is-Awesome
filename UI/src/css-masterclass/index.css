/* border-box */
*,
*::after,
*::before {
	box-sizing: border-box;
}

body {
	margin: 0 auto;
	max-width: 1200px;
	border: 1px solid;
	border-top: 0;
	border-bottom: 0;
	box-sizing: border-box;
	text-align: center;
}

.container {
	padding: 2rem;
	/* very imp container layout will shift if padding not given due to margin */
	background: #aedfae;
	height: 100vh;
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}

header {
	position: fixed;
	top: 0;
	z-index: 1;
	background: goldenrod;
	width: 100%;
	max-width: 1200px;
}

.badge-container {
	padding: 1rem;
	background: #eee;
	max-width: 900px;
	width: 100%;
	height: 24rem;
	display: flex;
	justify-content: center;
	align-items: center;
	border-radius: 10px;
}

.icon-msg {
	position: relative;
}

.badge {
	position: absolute;
	top: -16px;
	right: -32px;
	width: 4rem;
	height: 4rem;
	background: #000;
	border-radius: 50%;
	opacity: 0.9;
	border: 4px solid #eee;
	color: #eee;
	display: flex;
	justify-content: center;
	align-items: center;
}

/* will exceed the body 1200px because of padding extra 
space can be solved by border-box on all prop before and after
*/

/* fixed is a bad guy it dont obey parent relative rule like absolute */

.toast {
	position: fixed;
	bottom: 0;
	max-width: 1200px;
	width: 100%;
	display: none;
	/* again very imp prop to set otherwise toast will overflow outside container */
	background: grey;
	color: #eee;
	margin: 2.5rem 0;
	padding: 0.5rem;
	border-radius: 10px;
}

.btn {
	position: absolute;
	bottom: 0;
	left: 0;
	margin: 0.5rem;
}

.toggle-toast {
	display: block;
	animation: fadein 0.5s, fadeout 0.5s 3s;
}

/* Animations to fade the snackbar in and out */
@-webkit-keyframes fadein {
	from {
		bottom: 0;
		opacity: 0;
	}
	to {
		bottom: 30px;
		opacity: 1;
	}
}

@keyframes fadein {
	from {
		bottom: 0;
		opacity: 0;
	}
	to {
		bottom: 30px;
		opacity: 1;
	}
}

@-webkit-keyframes fadeout {
	from {
		bottom: 30px;
		opacity: 1;
	}
	to {
		bottom: 0;
		opacity: 0;
	}
}

@keyframes fadeout {
	from {
		bottom: 30px;
		opacity: 1;
	}
	to {
		bottom: 0;
		opacity: 0;
	}
}
